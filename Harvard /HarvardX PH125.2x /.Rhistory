murders <- murders %>% mutate(murder_rate = total/population*100000)
summarize(murders, mean(murder_rate))
# calculate US murder rate, generating a data frame
us_murder_rate <- murders %>%
summarize(rate = sum(total) / sum(population) * 100000)
us_murder_rate
# extract the numeric US murder rate with the dot operator
us_murder_rate %>% .$rate
# calculate and extract the murder rate with one pipe
us_murder_rate <- murders %>%
summarize(rate = sum(total) / sum(population) * 100000) %>%
.$rate
# libraries and data
library(tidyverse)
library(dslabs)
data(heights)
data(murders)
# compute separate average and standard deviation for male/female heights
heights %>%
group_by(sex) %>%
summarize(average = mean(height), standard_deviation = sd(height))
# compute median murder rate in 4 regions of country
murders <- murders %>%
mutate(murder_rate = total/population * 100000)
murders %>%
group_by(region) %>%
summarize(median_rate = median(murder_rate))
# libraries and data
library(tidyverse)
library(dslabs)
data(murders)
# set up murders object
murders <- murders %>%
mutate(murder_rate = total/population * 100000)
# arrange by population column, smallest to largest
murders %>% arrange(population) %>% head()
# arrange by murder rate, smallest to largest
murders %>% arrange(murder_rate) %>% head()
# arrange by murder rate in descending order
murders %>% arrange(desc(murder_rate)) %>% head()
# arrange by region alphabetically, then by murder rate within each region
murders %>% arrange(region, murder_rate) %>% head()
# show the top 10 states with highest murder rate, not ordered by rate
murders %>% top_n(10, murder_rate)
# show the top 10 states with highest murder rate, ordered by rate
murders %>% arrange(desc(murder_rate)) %>% top_n(10)
# alternatively, can use the slice_max function
murders %>% slice_max(murder_rate, n = 10)
library(dplyr)
library(ggplot2)
library(dslabs)
data(gapminder)
gapminder %>% filter(continent=="Africa" & year == 2012) %>%
ggplot(aes(fertility, life_expectancy)) +
geom_point()
library(dplyr)
library(ggplot2)
library(dslabs)
data(gapminder)
gapminder %>% filter(continent=="Africa" & year == 2012) %>%
ggplot(aes(fertility, life_expectancy, color = region)) +
geom_point()
library(dplyr)
library(dslabs)
data(gapminder)
df <- gapminder %>%
filter(continent=="Africa" & year == 2012 & fertility <=3 & life_expectancy>=70) %>%
select(country, region)
library(dplyr)
library(dslabs)
data(gapminder)
df <- gapminder %>%
filter(continent=="Africa" & year == 2012 & fertility <=3 & life_expectancy>=70) %>%
select(country, region)
library(dplyr)
library(dslabs)
data(gapminder)
years <- 1960:2010
countries <- c("United States", "Vietnam")
tab <- gapminder %>% filter(year %in% years & country %in% countries)
p <- tab %>% ggplot(aes(x=year,y=life_expectancy,color=country)) + geom_line()
p
library(dplyr)
library(ggplot2)
library(dslabs)
data(gapminder)
gapminder %>% filter(year >= 1960 & year <= 2010 & country == "Cambodia") %>%
ggplot(aes(year, life_expectancy)) + geom_line()
library(dplyr)
library(dslabs)
data(gapminder)
daydollars <- gapminder %>% mutate(dollars_per_day = gdp/population/365) %>% filter(continent == "Africa" & year == 2010 & !is.na(dollars_per_day))
daydollars %>% ggplot(aes(dollars_per_day)) + geom_density() + scale_x_continuous(trans = "log2")
library(dplyr)
library(ggplot2)
library(dslabs)
data(gapminder)
gapminder %>%
mutate(dollars_per_day = gdp/population/365) %>%
filter(continent == "Africa" & year %in% c(1970,2010) & !is.na(dollars_per_day)) %>%
ggplot(aes(dollars_per_day)) +
geom_density() +
scale_x_continuous(trans = "log2") +
facet_grid(year ~ .)
library(dplyr)
library(ggplot2)
library(dslabs)
data(gapminder)
gapminder %>%
mutate(dollars_per_day = gdp/population/365) %>%
filter(continent == "Africa" & year %in% c(1970,2010) & !is.na(dollars_per_day)) %>%
ggplot(aes(dollars_per_day, fill = region)) +
geom_density(bw=0.5, position = "stack") +
scale_x_continuous(trans = "log2") +
facet_grid(year ~ .)
library(dplyr)
library(ggplot2)
library(dslabs)
data(gapminder)
gapminder_Africa_2010 <- gapminder %>%
mutate(dollars_per_day = gdp/population/365) %>%
filter(continent == "Africa" & year == 2010 & !is.na(dollars_per_day) & !is.na(infant_mortality))
gapminder_Africa_2010 %>%  ggplot(aes(dollars_per_day, infant_mortality, color = region)) +
geom_point()
gapminder_Africa_2010 %>%
ggplot(aes(dollars_per_day, infant_mortality, color = region)) +
geom_point() +
scale_x_continuous(trans = "log2")
p <- tab %>% ggplot(aes(x=year,y=life_expectancy,color=country)) + geom_line()
p
gapminder_Africa_2010 %>%
ggplot(aes(dollars_per_day, infant_mortality, color = region, label = country)) +
geom_text() +
scale_x_continuous(trans = "log2")
library(dplyr)
library(ggplot2)
library(dslabs)
data(gapminder)
gapminder %>%
mutate(dollars_per_day = gdp/population/365) %>%
filter(continent == "Africa" & year %in% c(1970, 2010) & !is.na(dollars_per_day) & !is.na(infant_mortality)) %>%
ggplot(aes(dollars_per_day, infant_mortality, color = region, label = country)) +
geom_text() +
scale_x_continuous(trans = "log2") +
facet_grid(year~.)
install.packages("tm")
install.packages("SnowballC")
install.packages("wordcloud")
install.packages("RColorBrewer")
library("tm")
install.packages("NLP")
install.packages("NLP")
library("tm")
library("SnowballC")
library("wordcloud")
install.packages("NLP")
library("tm")
library("wordcloud")
install.packages("RColorBrewer")
library("wordcloud")
library("tm")
# load and inspect gapminder data
library(dslabs)
data(gapminder)
head(gapminder)
# compare infant mortality in Sri Lanka and Turkey
gapminder %>%
filter(year == 2015 & country %in% c("Sri Lanka", "Turkey")) %>%
select(country, infant_mortality)
# basic scatterplot of life expectancy versus fertility
ds_theme_set()    # set plot theme
# load and inspect gapminder data
library(dslabs)
data(gapminder)
head(gapminder)
library(ggplot2)
# compare infant mortality in Sri Lanka and Turkey
gapminder %>%
filter(year == 2015 & country %in% c("Sri Lanka", "Turkey")) %>%
select(country, infant_mortality)
# basic scatterplot of life expectancy versus fertility
ds_theme_set()    # set plot theme
filter(gapminder, year == 1962) %>%
ggplot(aes(fertility, life_expectancy)) +
geom_point()
# facet by continent and year
filter(gapminder, year %in% c(1962, 2012)) %>%
ggplot(aes(fertility, life_expectancy, col = continent)) +
geom_point() +
facet_grid(continent ~ year)
# scatterplot of US fertility by year
gapminder %>%
filter(country == "United States") %>%
ggplot(aes(year, fertility)) +
geom_point()
# add dollars per day variable
gapminder <- gapminder %>%
mutate(dollars_per_day = gdp/population/365)
# define gapminder
library(tidyverse)
library(dslabs)
data(gapminder)
# add additional cases
gapminder <- gapminder %>%
mutate(group = case_when(
.$region %in% west ~ "The West",
.$region %in% "Northern Africa" ~ "Northern Africa",
.$region %in% c("Eastern Asia", "South-Eastern Asia") ~ "East Asia",
.$region == "Southern Asia" ~ "Southern Asia",
.$region %in% c("Central America", "South America", "Caribbean") ~ "Latin America",
.$continent == "Africa" & .$region != "Northern Africa" ~ "Sub-Saharan Africa",
.$region %in% c("Melanesia", "Micronesia", "Polynesia") ~ "Pacific Islands"))
state <- reorder(state, rate)
library(dplyr)
library(ggplot2)
library(dslabs)
dat <- us_contagious_diseases %>% filter(year == 1967 & disease=="Measles" & count>0 & !is.na(population)) %>%
mutate(rate = count / population * 10000 * 52 / weeks_reporting) %>%
mutate(state = reorder(state, rate))
dat %>% ggplot(aes(state, rate)) +
geom_bar(stat="identity") +
coord_flip()
murders %>% mutate(rate = total/population*100000) %>%
mutate(region=reorder(region, rate, FUN=median)) %>%
ggplot(aes(region, rate)) +
geom_boxplot() +
geom_point()
library(dplyr)
library(ggplot2)
library(RColorBrewer)
library(dslabs)
data(us_contagious_diseases)
the_disease = "Smallpox"
dat <- us_contagious_diseases %>%
filter(!state%in%c("Hawaii","Alaska") & disease == the_disease & weeks_reporting>=10) %>%
mutate(rate = count / population * 10000) %>%
mutate(state = reorder(state, rate))
dat %>% ggplot(aes(year, state, fill = rate)) +
geom_tile(color = "grey50") +
scale_x_continuous(expand=c(0,0)) +
scale_fill_gradientn(colors = brewer.pal(9, "Reds"), trans = "sqrt") +
theme_minimal() +
theme(panel.grid = element_blank()) +
ggtitle(the_disease) +
ylab("") +
xlab("")
library(dplyr)
library(ggplot2)
library(dslabs)
library(RColorBrewer)
data(us_contagious_diseases)
the_disease = "Smallpox"
dat <- us_contagious_diseases %>%
filter(!state%in%c("Hawaii","Alaska") & disease == the_disease & weeks_reporting >= 10) %>%
mutate(rate = count / population * 10000) %>%
mutate(state = reorder(state, rate))
avg <- us_contagious_diseases %>%
filter(disease==the_disease) %>% group_by(year) %>%
summarize(us_rate = sum(count, na.rm=TRUE)/sum(population, na.rm=TRUE)*10000)
dat %>% ggplot() +
geom_line(aes(year, rate, group = state),  color = "grey50",
show.legend = FALSE, alpha = 0.2, size = 1) +
geom_line(mapping = aes(year, us_rate),  data = avg, size = 1, color = "black") +
scale_y_continuous(trans = "sqrt", breaks = c(5,25,125,300)) +
ggtitle("Cases per 10,000 by state") +
xlab("") +
ylab("") +
geom_text(data = data.frame(x=1955, y=50), mapping = aes(x, y, label="US average"), color="black") +
geom_vline(xintercept=1963, col = "blue")
library(dplyr)
library(ggplot2)
library(dslabs)
library(RColorBrewer)
data(us_contagious_diseases)
us_contagious_diseases %>% filter(state=="California" & weeks_reporting>=10) %>%
group_by(year, disease) %>%
summarize(rate = sum(count)/sum(population)*10000) %>%
ggplot(aes(year, rate, color = disease)) +
geom_line()
library(dplyr)
library(ggplot2)
library(dslabs)
library(RColorBrewer)
data(us_contagious_diseases)
us_contagious_diseases %>% filter(!is.na(population)) %>%
group_by(year, disease) %>%
summarize(rate = sum(count)/sum(population)*10000) %>%
ggplot(aes(year, rate, color = disease)) +
geom_line()
options(digits = 3)    # report 3 significant digits
library(tidyverse)
library(titanic)
install.packages("titanic")
options(digits = 3)    # report 3 significant digits
library(tidyverse)
library(titanic)
titanic <- titanic_train %>%
select(Survived, Pclass, Sex, Age, SibSp, Parch, Fare) %>%
mutate(Survived = factor(Survived),
Pclass = factor(Pclass),
Sex = factor(Sex))
titanic %>%
ggplot(aes(Age, fill = Sex)) +
geom_density(alpha = 0.2) +
facet_grid(Sex ~ .)
titanic %>%
ggplot(aes(Age, y = ..count.., fill = Sex)) +
geom_density(alpha = 0.2, position = "stack")
titanic %>%
ggplot(aes(Age, fill = Sex)) +
geom_density(alpha = 0.2)
params <- titanic %>%
filter(!is.na(Age)) %>%
summarize(mean = mean(Age), sd = sd(Age))
titanic %>%
filter(!is.na(Age)) %>%
ggplot(aes(sample = Age)) +
geom_qq(dparams = params) +
geom_abline()
#plot 1 - survival filled by sex
titanic %>%
ggplot(aes(Survived, fill = Sex)) +
geom_bar()
# plot 2 - survival filled by sex with position_dodge
titanic %>%
ggplot(aes(Survived, fill = Sex)) +
geom_bar(position = position_dodge())
#plot 3 - sex filled by survival
titanic %>%
ggplot(aes(Sex, fill = Survived)) +
geom_bar()
titanic %>%
ggplot(aes(Age, y = ..count.., fill = Survived)) +
geom_density(alpha = 0.2)
titanic %>%
filter(Fare > 0) %>%
ggplot(aes(Survived, Fare)) +
geom_boxplot() +
scale_y_continuous(trans = "log2") +
geom_jitter(alpha = 0.2)
# barplot of passenger class filled by survival
titanic %>%
ggplot(aes(Pclass, fill = Survived)) +
geom_bar() +
ylab("Proportion")
# barplot of passenger class filled by survival with position_fill
titanic %>%
ggplot(aes(Pclass, fill = Survived)) +
geom_bar(position = position_fill()) +
ylab("Proportion")
# Barplot of survival filled by passenger class with position_fill
titanic %>%
ggplot(aes(Survived, fill = Pclass)) +
geom_bar(position = position_fill()) +
ylab("Proportion")
titanic %>%
ggplot(aes(Age, y = ..count.., fill = Survived)) +
geom_density(position = "stack") +
facet_grid(Sex ~ Pclass)
library(tidyverse)
library(dslabs)
data(stars)
options(digits = 3)   # report 3 significant digits
sd(stars$magnitude)
mean(stars$magnitude)
stars %>%
ggplot(aes(magnitude)) +
geom_density()
stars %>%
ggplot(aes(temp)) +
geom_density()
stars %>%
ggplot(aes(temp, magnitude)) +
geom_point()
stars %>%
ggplot(aes(log10(temp), magnitude)) +
geom_point() +
scale_x_reverse() +
scale_y_reverse()
stars %>%
ggplot(aes(log10(temp), magnitude)) +
geom_point() +
scale_x_reverse() +
scale_y_reverse()
stars %>%
ggplot(aes(log10(temp), magnitude)) +
geom_point() +
geom_text(aes(label = star)) +
scale_x_reverse() +
scale_y_reverse()
stars %>%
ggplot(aes(log10(temp), magnitude)) +
geom_point() +
geom_text(aes(label = star)) +
scale_x_reverse() +
scale_y_reverse()
stars %>%
ggplot(aes(log10(temp), magnitude)) +
geom_point() +
geom_text(aes(label = star)) +
scale_x_reverse() +
scale_y_reverse()
stars %>%
ggplot(aes(log10(temp), magnitude, col = type)) +
geom_point() +
scale_x_reverse() +
scale_y_reverse()
stars %>%
ggplot(aes(log10(temp), magnitude, col = type)) +
geom_point() +
scale_x_reverse() +
scale_y_reverse()
stars %>%
ggplot(aes(log10(temp), magnitude, col = type)) +
geom_point() +
scale_x_reverse() +
scale_y_reverse()
library(tidyverse)
library(dslabs)
data(temp_carbon)
data(greenhouse_gases)
data(historic_co2)
temp_carbon %>%
filter(!is.na(carbon_emissions)) %>%
.$year %>%
min()
temp_carbon %>%
filter(!is.na(carbon_emissions)) %>%
.$year %>%
max()
carbon1 <- temp_carbon %>%
filter(year == 1751) %>%
.$carbon_emissions
carbon2 <- temp_carbon %>%
filter(year == 2014) %>%
.$carbon_emissions
carbon2/carbon1
temp_carbon %>%
filter(!is.na(temp_anomaly)) %>%
.$year %>%
min()
temp_carbon %>%
filter(!is.na(temp_anomaly)) %>%
.$year %>%
max()
How many degrees Celsius has temperature increased over the date range? Compare the temperatures in the most recent year versus the oldest year.
temp1 <- temp_carbon %>%
filter(year == "1880") %>%
.$temp_anomaly
temp2 <- temp_carbon %>%
filter(year == "2018") %>%
.$temp_anomaly
temp2 - temp1
p <- temp_carbon %>%
filter(!is.na(temp_anomaly)) %>%
ggplot(aes(year, temp_anomaly)) +
geom_line()
p <- p + geom_hline(aes(yintercept = 0), col = "blue")
p
temp_carbon %>%
ggplot(aes(year, temp_anomaly)) +
geom_line() +
geom_hline(aes(yintercept = 0), col = "blue") +
ylab("Temperature anomaly (degrees C)") +
geom_text(aes(x = 2000, y = 0.05, label = "20th century mean"), col = "blue") +
xlim(c(1880, 2018)) +
ggtitle("Temperature anomaly relative to 20th century mean, 1880-2018")
temp_carbon %>%
ggplot(aes(year, temp_anomaly)) +
geom_line() +
geom_hline(aes(yintercept = 0), col = "blue") +
ylab("Temperature anomaly (degrees C)") +
geom_text(aes(x = 2000, y = 0.05, label = "20th century mean"), col = "blue") +
xlim(c(1880, 2018)) +
ggtitle("Temperature anomaly relative to 20th century mean, 1880-2018")
temp_carbon %>%
ggplot(aes(year, temp_anomaly)) +
geom_line() +
geom_line(aes(year, land_anomaly), col = "red") +
geom_line(aes(year, ocean_anomaly), col = "blue") +
ylab("Temperature anomaly (degrees C)") +
xlim(c(1880, 2018)) +
ggtitle("Temperature anomaly on land and ocean")
greenhouse_gases %>%
ggplot(aes(year,concentration)) +
geom_line() +
facet_grid(gas ~., scales = "free") +
geom_vline(xintercept = 1850) +
ylab("Concentration (ch4/n2o ppb, co2 ppm)") +
ggtitle("Atmospheric greenhouse gas concentration by year, 0-2000")
greenhouse_gases %>%
ggplot(aes(year, concentration)) +
geom_line() +
facet_grid(gas ~ ., scales = "free") +
geom_vline(xintercept = 1850) +
xlab("year") +
ylab("Concentration (ch4/n2o ppb, co2 ppm)") +
ggtitle("Atmospheric greenhouse gas concentration by year, 0-2000")
temp_carbon %>%
ggplot(aes(year, carbon_emissions)) +
geom_line() +
ylab("Carbon emissions (metric tons)") +
ggtitle("Annual global carbon emissions, 1751-2014")
co2_time <- historic_co2 %>%
ggplot(aes(year, co2, col = source)) +
geom_line() +
ggtitle("Atmospheric CO2 concentration, -800,000 BC to today") +
ylab("co2 (ppmv)")
co2_time
co2_time + xlim(-800000, -775000)
co2_time + xlim(-375000, -330000)
co2_time + xlim(-140000, -120000)
